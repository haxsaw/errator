NOTE FOR WINDOWS BUILDS:
While you still need virtualenvs to drive the build, you can't simply do so from a regular cmd.exe window.
Instead, you need a machine with the MS VisualStudio Community edition installed, and from there you need
to find the Developer Command Prompt. Start this up, and you'll be inside an environment that will be able
locate all the VS tools. From here, you can activate a suitable virtenv, and then do the various commands
below

1.  To build a local version of errator for testing:

    python setup[2|3].py build_ext --inplace

    (make sure to have cython installed). The proper setup*.py to use is based on the version
    of Python you are using to build the extension


2.  To build the wheel for distribution:

    python setup[2|3].py bdist_wheel --python-tag py[2|3]

    This will place the wheel in the dist subdirectory. The proper setup*.py to use is based on the version
    of Python you are using to build the extension


3.  To upload to test PyPI using twine:

    twine upload --repository-url https://test.pypi.org/legacy/ dist/*

    Run this from the project root directory.

    This will upload all the created distributions. This should include any distros from windows

4.  To upload to the real PyPI using twine:

    twine upload dist/*

    Run this from the project root directory.

    This will upload all the created distributions. This should include any distros from windows
